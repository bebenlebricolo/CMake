name: CMake Windows Release build

on: [push]

env:
  BUILD_TYPE: Release
  REPO_NAME: CMake-AtmelStudio7-compatibility
  GOOGLETEST_TAG: release-1.10.0


jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v2

    #- name: Update to latest windows 10 sdk
    #  shell: powershell
    #  run: |
    #    Invoke-WebRequest -Uri "https://aka.ms/vs/16/release/vs_buildtools.exe" -OutFile "C:\TEMP\vs_buildtools.exe"
    #    C:\TEMP\vs_buildtools.exe --quiet --wait --norestart --nocache --remove Microsoft.VisualStudio.Component.Windows10SDK.17763
    #    choco install windows-sdk-10-version-2004-all
    #    choco install visualstudio2019buildtools
    #    dir 'C:\Program Files (x86)\Windows Kits\10\Include'

      #choco install windows-sdk-10.1

    - name: Checkout submodules
      shell: powershell
      run: |
        git submodule init
        git submodule update

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Create Build Environment
      shell: powershell
      run: mkdir ${{runner.workspace}}/CMake-AtmelStudio7-compatibility/build

    - name: Configure CMake
      shell: powershell
      working-directory: ${{runner.workspace}}/CMake-AtmelStudio7-compatibility/build
      run: |
        cmake ../ -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/CMake-AtmelStudio7-compatibility/build
      shell: powershell
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      #run: cmake --build . --config $BUILD_TYPE
      run: |
        dir
        cmake --build . --config ${{env.BUILD_TYPE}}
      #cmake --build . --config ${{env.BUILD_TYPE}} --target cmake
      #msbuild /m /p:Configuration=${{env.BUILD_TYPE}} Source/cmake.vcxproj

    #- name: Test
    #  working-directory: ${{runner.workspace}}/build
    #  shell: bash
    #  # Execute tests defined by the CMake configuration.
    #  # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C $BUILD_TYPE
