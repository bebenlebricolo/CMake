name: CMake Windows Release build

on: [push]

env:
  BUILD_TYPE: Release
  REPO_NAME: CMake-AtmelStudio7-compatibility
  GOOGLETEST_TAG: release-1.10.0


jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Checkout submodules
      shell: powershell
      run: git submodule init ; git submodule update

    - name: Create Build Environment
      shell: powershell
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: mkdir ${{runner.workspace}}\\build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: powershell
      #working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        cmake "${{runner.workspace}}/CMake-AtmelStudio7-compatibility" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "Visual Studio 16 2019"

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: powershell
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE


    #- name: Test
    #  working-directory: ${{runner.workspace}}/build
    #  shell: bash
    #  # Execute tests defined by the CMake configuration.
    #  # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C $BUILD_TYPE
